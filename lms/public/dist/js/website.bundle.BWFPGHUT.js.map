{
  "version": 3,
  "sources": ["../../../../../apps/lms/lms/public/js/common_functions.js", "../../../../../apps/lms/lms/public/js/profile.js", "../../../../../apps/lms/lms/public/js/website.bundle.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/dom.js", "../../../../../apps/frappe/node_modules/frappe-charts/node_modules/style-inject/dist/style-inject.es.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/constants.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/objects/SvgTip.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/helpers.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/draw-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/draw.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/colors.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/animate.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/animation.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/BaseChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/export.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/css/chartsCss.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/AggregationChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/date-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/objects/ChartComponents.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/PercentageChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/PieChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/intervals.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/Heatmap.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/utils/axis-chart-utils.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/AxisChart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/chart.js", "../../../../../apps/frappe/node_modules/frappe-charts/src/js/charts/DonutChart.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/chart.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/alt_keyboard_shortcuts.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/keyboard.js", "../../../../../apps/frappe/frappe/public/js/frappe/event_emitter.js"],
  "sourcesContent": ["frappe.ready(() => {\n\tsetup_file_size();\n\tpin_header();\n\n\t$(\".enroll-in-course\").click((e) => {\n\t\tenroll_in_course(e);\n\t});\n\n\t$(\".notify-me\").click((e) => {\n\t\tnotify_user(e);\n\t});\n\n\t$(\".nav-link\").click((e) => {\n\t\tchange_hash(e);\n\t});\n\n\tif (window.location.hash) {\n\t\topen_tab();\n\t}\n\n\tif (window.location.pathname == \"/statistics\") {\n\t\tgenerate_graph(\"New Signups\", \"#new-signups\");\n\t\tgenerate_graph(\"Course Enrollments\", \"#course-enrollments\");\n\t\tgenerate_graph(\"Lesson Completion\", \"#lesson-completion\");\n\t\tgenerate_course_completion_graph();\n\t}\n\n\texpand_the_active_chapter();\n\n\t$(\".chapter-title\")\n\t\t.unbind()\n\t\t.click((e) => {\n\t\t\trotate_chapter_icon(e);\n\t\t});\n\n\t$(\".no-preview\").click((e) => {\n\t\tshow_no_preview_dialog(e);\n\t});\n\n\t$(\"#create-batch\").click((e) => {\n\t\topen_batch_dialog(e);\n\t});\n\n\t$(\"#course-filter\").change((e) => {\n\t\tfilter_courses(e);\n\t});\n});\n\nconst pin_header = () => {\n\tconst el = document.querySelector(\".sticky\");\n\tif (el) {\n\t\tconst observer = new IntersectionObserver(\n\t\t\t([e]) =>\n\t\t\t\te.target.classList.toggle(\"is-pinned\", e.intersectionRatio < 1),\n\t\t\t{ threshold: [1] }\n\t\t);\n\t\tobserver.observe(el);\n\t}\n};\n\nconst setup_file_size = () => {\n\tfrappe.provide(\"frappe.form.formatters\");\n\tfrappe.form.formatters.FileSize = file_size;\n};\n\nconst file_size = (value) => {\n\tif (value > 1048576) {\n\t\tvalue = flt(flt(value) / 1048576, 1) + \"M\";\n\t} else if (value > 1024) {\n\t\tvalue = flt(flt(value) / 1024, 1) + \"K\";\n\t}\n\treturn value;\n};\n\nconst enroll_in_course = (e) => {\n\te.preventDefault();\n\tlet course = $(e.currentTarget).attr(\"data-course\");\n\tif (frappe.session.user == \"Guest\") {\n\t\twindow.location.href = `/login?redirect-to=/courses/${course}`;\n\t\treturn;\n\t}\n\n\tlet batch = $(e.currentTarget).attr(\"data-batch\");\n\tbatch = batch ? decodeURIComponent(batch) : \"\";\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_enrollment.lms_enrollment.create_membership\",\n\t\targs: {\n\t\t\tbatch: batch ? batch : \"\",\n\t\t\tcourse: course,\n\t\t},\n\t\tcallback: (data) => {\n\t\t\tif (data.message == \"OK\") {\n\t\t\t\t$(\".no-preview-modal\").modal(\"hide\");\n\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage: __(\"Enrolled successfully\"),\n\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t},\n\t\t\t\t\t3\n\t\t\t\t);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\twindow.location.href = `/courses/${course}/learn/1.1`;\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t},\n\t});\n};\n\nconst notify_user = (e) => {\n\te.preventDefault();\n\tvar course = decodeURIComponent($(\"#outline-heading\").attr(\"data-course\"));\n\tif (frappe.session.user == \"Guest\") {\n\t\twindow.location.href = `/login?redirect-to=/courses/${course}`;\n\t\treturn;\n\t}\n\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_course_interest.lms_course_interest.capture_interest\",\n\t\targs: {\n\t\t\tcourse: course,\n\t\t},\n\t\tcallback: (data) => {\n\t\t\t$(\".no-preview-modal\").modal(\"hide\");\n\t\t\tfrappe.show_alert(\n\t\t\t\t{\n\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t\"You have opted to be notified for this course. You will receive an email when the course becomes available.\"\n\t\t\t\t\t),\n\t\t\t\t\tindicator: \"green\",\n\t\t\t\t},\n\t\t\t\t3\n\t\t\t);\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t}, 3000);\n\t\t},\n\t});\n};\n\nconst generate_graph = (chart_name, element, type = \"line\") => {\n\tlet date = frappe.datetime;\n\n\tfrappe.call({\n\t\tmethod: \"lms.lms.utils.get_chart_data\",\n\t\targs: {\n\t\t\tchart_name: chart_name,\n\t\t\ttimespan: \"Select Date Range\",\n\t\t\ttimegrain: \"Daily\",\n\t\t\tfrom_date: date.add_days(date.get_today(), -30),\n\t\t\tto_date: date.add_days(date.get_today(), +1),\n\t\t},\n\t\tcallback: (data) => {\n\t\t\trender_chart(data.message, chart_name, element, type);\n\t\t},\n\t});\n};\n\nconst render_chart = (data, chart_name, element, type) => {\n\tconst chart = new frappe.Chart(element, {\n\t\ttitle: chart_name,\n\t\tdata: data,\n\t\ttype: type,\n\t\theight: 250,\n\t\tcolors: [\"#4563f1\"],\n\t\taxisOptions: {\n\t\t\txIsSeries: 1,\n\t\t},\n\t\tlineOptions: {\n\t\t\tregionFill: 1,\n\t\t},\n\t});\n};\n\nconst generate_course_completion_graph = () => {\n\tfrappe.call({\n\t\tmethod: \"lms.lms.utils.get_course_completion_data\",\n\t\tcallback: (data) => {\n\t\t\trender_chart(\n\t\t\t\tdata.message,\n\t\t\t\t\"Course Completion\",\n\t\t\t\t\"#course-completion\",\n\t\t\t\t\"pie\"\n\t\t\t);\n\t\t},\n\t});\n};\n\nconst change_hash = (e) => {\n\twindow.location.hash = $(e.currentTarget).attr(\"href\");\n};\n\nconst open_tab = () => {\n\t$(`a[href=\"${window.location.hash}\"]`).click();\n};\n\nconst expand_the_first_chapter = () => {\n\tlet elements = $(\".course-home-outline .collapse\");\n\telements.each((i, element) => {\n\t\tif (i < 1) {\n\t\t\tshow_section(element);\n\t\t\treturn false;\n\t\t}\n\t});\n};\n\nconst expand_the_active_chapter = () => {\n\tlet selector = $(\".course-home-headings.title\");\n\n\tif (selector.length && $(\".course-details-page\").length) {\n\t\texpand_for_course_details(selector);\n\t} else if ($(\".active-lesson\").length) {\n\t\t/* For course home page */\n\t\tselector = $(\".active-lesson\");\n\t\tshow_section(selector.parent().parent());\n\t} else {\n\t\t/* If no active chapter then exapand the first chapter */\n\t\texpand_the_first_chapter();\n\t}\n};\n\nconst expand_for_course_details = (selector) => {\n\t$(\".lesson-info\").removeClass(\"active-lesson\");\n\t$(\".lesson-info\").each((i, elem) => {\n\t\tif ($(elem).data(\"lesson\") == selector.data(\"lesson\")) {\n\t\t\t$(elem).addClass(\"active-lesson\");\n\t\t\tshow_section($(elem).parent().parent());\n\t\t}\n\t});\n};\n\nconst show_section = (element) => {\n\t$(element).addClass(\"show\");\n\t$(element)\n\t\t.siblings(\".chapter-title\")\n\t\t.children(\".chapter-icon\")\n\t\t.css(\"transform\", \"rotate(90deg)\");\n\t$(element).siblings(\".chapter-title\").attr(\"aria-expanded\", true);\n};\n\nconst rotate_chapter_icon = (e) => {\n\tlet icon = $(e.currentTarget).children(\".chapter-icon\");\n\tif (icon.css(\"transform\") == \"none\") {\n\t\ticon.css(\"transform\", \"rotate(90deg)\");\n\t} else {\n\t\ticon.css(\"transform\", \"none\");\n\t}\n};\n\nconst show_no_preview_dialog = (e) => {\n\t$(\"#no-preview-modal\").modal(\"show\");\n};\n\nconst open_batch_dialog = () => {\n\tthis.batch_dialog = new frappe.ui.Dialog({\n\t\ttitle: __(\"New Batch\"),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: __(\"Title\"),\n\t\t\t\tfieldname: \"title\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: batch_info && batch_info.title,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tlabel: __(\"Published\"),\n\t\t\t\tfieldname: \"published\",\n\t\t\t\tdefault: batch_info && batch_info.published,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: __(\"Start Date\"),\n\t\t\t\tfieldname: \"start_date\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: batch_info && batch_info.start_date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: __(\"End Date\"),\n\t\t\t\tfieldname: \"end_date\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: batch_info && batch_info.end_date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Time\",\n\t\t\t\tlabel: __(\"Start Time\"),\n\t\t\t\tfieldname: \"start_time\",\n\t\t\t\tdefault: batch_info && batch_info.start_time,\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Time\",\n\t\t\t\tlabel: __(\"End Time\"),\n\t\t\t\tfieldname: \"end_time\",\n\t\t\t\tdefault: batch_info && batch_info.end_time,\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tlabel: __(\"Medium\"),\n\t\t\t\tfieldname: \"medium\",\n\t\t\t\toptions: [\"Online\", \"Offline\"],\n\t\t\t\tdefault: (batch_info && batch_info.medium) || \"Online\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: __(\"Category\"),\n\t\t\t\tfieldname: \"category\",\n\t\t\t\toptions: \"LMS Category\",\n\t\t\t\tonly_select: 1,\n\t\t\t\tdefault: batch_info && batch_info.category,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Int\",\n\t\t\t\tlabel: __(\"Seat Count\"),\n\t\t\t\tfieldname: \"seat_count\",\n\t\t\t\tdefault: batch_info && batch_info.seat_count,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: __(\"Evaluation End Date\"),\n\t\t\t\tfieldname: \"evaluation_end_date\",\n\t\t\t\tdefault: batch_info && batch_info.evaluation_end_date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Small Text\",\n\t\t\t\tlabel: __(\"Description\"),\n\t\t\t\tfieldname: \"description\",\n\t\t\t\tdefault: batch_info && batch_info.description,\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Text Editor\",\n\t\t\t\tlabel: __(\"Batch Details\"),\n\t\t\t\tfieldname: \"batch_details\",\n\t\t\t\tdefault: batch_info && batch_info.batch_details,\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"HTML Editor\",\n\t\t\t\tlabel: __(\"Batch Details Raw\"),\n\t\t\t\tfieldname: \"batch_details_raw\",\n\t\t\t\tdefault: batch_info && batch_info.batch_details_raw,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Attach Image\",\n\t\t\t\tlabel: __(\"Meta Image\"),\n\t\t\t\tfieldname: \"meta_image\",\n\t\t\t\tdefault: batch_info && batch_info.meta_image,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tlabel: __(\"Pricing\"),\n\t\t\t\tfieldname: \"pricing\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tlabel: __(\"Paid Batch\"),\n\t\t\t\tfieldname: \"paid_batch\",\n\t\t\t\tdefault: batch_info && batch_info.paid_batch,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tlabel: __(\"Amount\"),\n\t\t\t\tfieldname: \"amount\",\n\t\t\t\tdefault: batch_info && batch_info.amount,\n\t\t\t\tmandatory_depends_on: \"paid_batch\",\n\t\t\t\tdepends_on: \"paid_batch\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: __(\"Currency\"),\n\t\t\t\tfieldname: \"currency\",\n\t\t\t\toptions: \"Currency\",\n\t\t\t\tdefault: batch_info && batch_info.currency,\n\t\t\t\tmandatory_depends_on: \"paid_batch\",\n\t\t\t\tdepends_on: \"paid_batch\",\n\t\t\t\tonly_select: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tlabel: __(\"Amount (USD)\"),\n\t\t\t\tfieldname: \"amount_usd\",\n\t\t\t\tdepends_on: \"paid_batch\",\n\t\t\t\tdescription: __(\n\t\t\t\t\t\"If you set an amount here, then the USD equivalent setting will not get applied.\"\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\tprimary_action_label: __(\"Save\"),\n\t\tprimary_action: (values) => {\n\t\t\tsave_batch(values);\n\t\t},\n\t});\n\tthis.batch_dialog.show();\n};\n\nconst save_batch = (values) => {\n\tlet args = {};\n\tif (batch_info) {\n\t\targs = Object.assign(batch_info, values);\n\t} else {\n\t\targs = values;\n\t}\n\tfrappe.call({\n\t\tmethod: \"lms.lms.doctype.lms_batch.lms_batch.create_batch\",\n\t\targs: args,\n\t\tcallback: (r) => {\n\t\t\tif (r.message) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tmessage: batch_info\n\t\t\t\t\t\t? __(\"Batch Updated\")\n\t\t\t\t\t\t: __(\"Batch Created\"),\n\t\t\t\t\tindicator: \"green\",\n\t\t\t\t});\n\t\t\t\tthis.batch_dialog.hide();\n\t\t\t\twindow.location.href = `/batches/details/${r.message.name}`;\n\t\t\t}\n\t\t},\n\t});\n};\n\nconst filter_courses = (e) => {\n\tconst course_lists = $(\".course-cards-parent\");\n\tconst filter = $(e.currentTarget).val();\n\tcourse_lists.each((i, list) => {\n\t\tconst course_cards = $(list).children(\".course-card\");\n\t\tcourse_cards.sort((a, b) => {\n\t\t\tvar value1 = $(a).data(filter);\n\t\t\tvar value2 = $(b).data(filter);\n\t\t\treturn value1 > value2 ? -1 : value1 < value2 ? 1 : 0;\n\t\t});\n\t\t$(list).append(course_cards);\n\t});\n};\n", "frappe.ready(() => {\n\thide_profile_and_dashboard_for_guest_users();\n});\n\nconst hide_profile_and_dashboard_for_guest_users = () => {\n\tif (frappe.session.user == \"Guest\") {\n\t\tlet links = $(\".nav-link\").filter(\n\t\t\t(i, elem) =>\n\t\t\t\t$(elem).text().trim() === \"My Profile\" ||\n\t\t\t\t$(elem).text().trim() === \"Dashboard\"\n\t\t);\n\t\tlinks.length && links.each((i, elem) => $(elem).addClass(\"hide\"));\n\t}\n};\n", "import \"./profile.js\";\nimport \"./common_functions.js\";\nimport \"../../../../frappe/frappe/public/js/frappe/ui/chart.js\";\nimport \"../../../../frappe/frappe/public/js/frappe/ui/keyboard.js\";\nimport \"../../../../frappe/frappe/public/js/frappe/event_emitter.js\";\n", "export function $(expr, con) {\n\treturn typeof expr === \"string\" ? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node) {\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif (typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n\t\trect.left >= 0 &&\n\t\trect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o) {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true);\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif (!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass = 'active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif (index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const LEGEND_ITEM_WIDTH = 150;\nexport const SERIES_LABEL_SPACE_RATIO = 0.6;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 16;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 7.48;\nconst DEFAULT_CHART_COLORS = ['pink', 'blue', 'green', 'grey', 'red', 'yellow', 'purple', 'teal', 'cyan', 'orange'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n", "import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.list = this.container.querySelector('.data-point-list');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif (this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif (this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\n\t\tif (this.listValues.length > 4) {\n\t\t\tthis.list.classList.add('tooltip-grid');\n\t\t} else {\n\t\t\tthis.list.classList.remove('tooltip-grid');\n\t\t}\n\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\t\t\tlet li = $.create('li', {\n\t\t\t\tinnerHTML: `<div class=\"tooltip-legend\" style=\"background: ${color};\"></div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"tooltip-value\">${value === 0 || value ? value : ''}</div>\n\t\t\t\t\t\t<div class=\"tooltip-label\">${set.title ? set.title : ''}</div>\n\t\t\t\t\t</div>`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width / 2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif (this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if (this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n", "import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }", "import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif (extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len - 3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet l = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened * 100) / 100 + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by Fran\u00E7ois Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points = [];\n\tconst length = Math.min(xList.length, yList.length);\n\t\n\tfor (let i = 0; i < xList.length; i++) {\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n\n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n\n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n\n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n\n\treturn pointStr(points, bezierCommand);\n}\n", "import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber, round } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 18;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#E2E6E9';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\" ? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif (typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (i === \"className\") { i = \"class\"; }\n\t\t\tif (i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform = '', parent = undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif (parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className = '') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className = '', stroke = 'none', fill = 'none', strokeWidth = 2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise = 1, largeArc = 0) {\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId = 'path-fill-gradient' + '-' + color + '-' + (lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif (lighter) {\n\t\topacities = [0.15, 0.05, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function rightRoundedBar(x, width, height) {\n\t// https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n\tlet radius = height / 2;\n\tlet xOffset = width - radius;\n\n\treturn `M${x},0 h${xOffset} q${radius},0 ${radius},${radius} q0,${radius} -${radius},${radius} h-${xOffset} v${height}z`;\n}\n\nexport function leftRoundedBar(x, width, height) {\n\tlet radius = height / 2;\n\tlet xOffset = width - radius;\n\n\treturn `M${x + radius},0 h${xOffset} v${height} h-${xOffset} q-${radius}, 0 -${radius},-${radius} q0,-${radius} ${radius},-${radius}z`;\n}\n\nexport function percentageBar(x, y, width, height, isFirst, isLast, fill = 'none') {\n\tif (isLast) {\n\t\tlet pathStr = rightRoundedBar(x, width, height);\n\t\treturn makePath(pathStr, 'percentage-bar', null, fill);\n\t}\n\n\tif (isFirst) {\n\t\tlet pathStr = leftRoundedBar(x, width, height);\n\t\treturn makePath(pathStr, 'percentage-bar', null, fill);\n\t}\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill = 'none', data = {}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendDot(x, y, size, radius, fill = 'none', label, value, font_size = null, truncate = false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\tif (!font_size) font_size = FONT_SIZE;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tx: 0,\n\t\ty: 4 - size,\n\t\theight: size,\n\t\twidth: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tlet textLabel = createSVG('text', {\n\t\tclassName: 'legend-dataset-label',\n\t\tx: size,\n\t\ty: 0,\n\t\tdx: (font_size) + 'px',\n\t\tdy: (font_size / 3) + 'px',\n\t\t'font-size': (font_size * 1.6) + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label\n\t});\n\n\tlet textValue = null;\n\tif (value) {\n\t\ttextValue = createSVG('text', {\n\t\t\tclassName: 'legend-dataset-value',\n\t\t\tx: size,\n\t\t\ty: FONT_SIZE + 10,\n\t\t\tdx: (FONT_SIZE) + 'px',\n\t\t\tdy: (FONT_SIZE / 3) + 'px',\n\t\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t\t'text-anchor': 'start',\n\t\t\tinnerHTML: value\n\t\t});\n\t}\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(textLabel);\n\n\tif (value && textValue) {\n\t\tgroup.appendChild(textValue);\n\t}\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || \"var(--charts-label-color)\";\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options = {}) {\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${x}, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options = {}) {\n\tif (!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) {\n\t\tif (options.numberFormatter) {\n\t\t\tlabel = options.numberFormatter(label);\n\t\t} else {\n\t\t\tlabel = shortenLargeNumber(label);\n\t\t}\n\t}\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\" : \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif (text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options = {}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif (!options.pos) options.pos = 'left';\n\tif (!options.offset) options.offset = 0;\n\tif (!options.mode) options.mode = 'span';\n\tif (!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif (!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif (options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\tif (typeof label === \"number\") label = round(label);\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers,\n\t\tnumberFormatter: options.numberFormatter,\n\t});\n}\n\nexport function xLine(x, label, height, options = {}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif (!options.pos) options.pos = 'bottom';\n\tif (!options.offset) options.offset = 0;\n\tif (!options.mode) options.mode = 'span';\n\tif (!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif (options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options = {}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif (!options.labelPos) options.labelPos = 'right';\n\tif (!options.lineType) options.lineType = 'dashed';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options = {}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: options.fill || `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif (!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label + \"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label = '', index = 0, offset = 0, meta = {}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif (height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\t// x y h w\n\n\t// M{x},{y+r}\n\t// q0,-{r} {r},-{r}\n\t// q{r},0 {r},{r}\n\t// v{h-r}\n\t// h-{w}z\n\n\t// let radius = width/2;\n\t// let pathStr = `M${x},${y+radius} q0,-${radius} ${radius},-${radius} q${radius},0 ${radius},${radius} v${height-radius} h-${width}z`\n\n\t// let rect = createSVG('path', {\n\t// \tclassName: 'bar mini',\n\t// \td: pathStr,\n\t// \tstyles: { fill: color },\n\t// \tx: x,\n\t// \ty: y,\n\t// \t'data-point-index': index,\n\t// });\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif (!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width / 2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label = '', index = 0, hideDotBorder = false) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}; ${hideDotBorder ? `stroke: ${color}`: ''}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif (!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options = {}, meta = {}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\" + pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif (options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif (options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif (unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif (transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n", "const PRESET_COLOR_MAP = {\n\t'pink': '#F683AE',\n\t'blue': '#318AD8',\n\t'green': '#48BB74',\n\t'grey': '#A6B1B9',\n\t'red': '#F56B6B',\n\t'yellow': '#FACF7A',\n\t'purple': '#44427B',\n\t'teal': '#5FD8C4',\n\t'cyan': '#15CCEF',\n\t'orange': '#F8814F',\n\t'light-pink': '#FED7E5',\n\t'light-blue': '#BFDDF7',\n\t'light-green': '#48BB74',\n\t'light-grey': '#F4F5F6',\n\t'light-red': '#F6DFDF',\n\t'light-yellow': '#FEE9BF',\n\t'light-purple': '#E8E8F7',\n\t'light-teal': '#D3FDF6',\n\t'light-cyan': '#DDF8FD',\n\t'light-orange': '#FECDB8'\n};\n\nfunction limitColor(r) {\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col, 16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n", "import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{ transform: newCoord.join(', ') },\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{ transform: old }\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset = 0, meta = {}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif (bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{ width: width, height: height },\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, { width: width, height: height, x: x, y: y }, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif (dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, { cx: x, cy: y }, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, { d: \"M\" + pointsStr }, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif (paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{ d: \"M\" + regStartPt + pointsStr + regEndPt },\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, { d: pathStr }, UNIT_ANIM_DUR, STD_EASING];\n}\n", "// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType = \"linear\", type = undefined, oldValues = {}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor (var attributeName in props) {\n\t\tlet animateElement;\n\t\tif (attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur / 1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif (type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif (type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif (elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif (svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif (animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n", "import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { LEGEND_ITEM_WIDTH } from '../utils/constants';\nimport {\n\tBASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS\n} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: (typeof options.showLegend !== 'undefined') ? options.showLegend : 1,\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\tdisableEntryAnimation: options.disableEntryAnimation || 0,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif (!this.title.length) { m.titleHeight = 0; }\n\t\tif (!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif (this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif (!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif (this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() { }\n\n\tdraw(onlyWidthChange = false, init = false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif (init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => { this.update(this.data, true); }, this.initTimeout);\n\t\t}\n\t\t\n\t\tif (this.config.showLegend) {\n\t\t\tthis.renderLegend();\n\t\t}\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() { } // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif (this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif (this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif (this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif (this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif (this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data, drawing = false) {\n\t\tif (!data) console.error('No data to update.');\n\t\tif (!drawing) data = deepClone(data);\n\t\tconst animate = drawing ? !this.config.disableEntryAnimation : this.config.animate;\n\t\t\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, animate);\n\t}\n\n\trender(components = this.components, animate = true) {\n\t\tif (this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif (elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif (this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend(dataset) {\n\t\tthis.legendArea.textContent = '';\n\t\tlet count = 0;\n\t\tlet y = 0;\n\n\t\tdataset.map((data, index) => {\n\t\t\tlet divisor = Math.floor(this.width / LEGEND_ITEM_WIDTH);\n\t\t\tif (count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += this.config.legendRowHeight;\n\t\t\t}\n\t\t\tlet x = LEGEND_ITEM_WIDTH * count;\n\t\t\tlet dot = this.makeLegend(data, index, x, y);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n\n\tmakeLegend() { }\n\n\n\tsetupNavigation(init = false) {\n\t\tif (!this.config.isNavigable) return;\n\n\t\tif (init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif (isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif (this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() { }\n\tupdateOverlay() { }\n\tbindOverlay() { }\n\tbindUnits() { }\n\n\tonLeftArrow() { }\n\tonRightArrow() { }\n\tonUpArrow() { }\n\tonDownArrow() { }\n\tonEnterKey() { }\n\n\taddDataPoint() { }\n\tremoveDataPoint() { }\n\n\tgetDataPoint() { }\n\tsetCurrentDataPoint() { }\n\n\tupdateDataset() { }\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n", "import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, { type: \"image/svg+xml; charset=utf-8\" });\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function () {\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n", "export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";", "import BaseChart from './BaseChart';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t\tthis.config.legendRowHeight = 60;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif (allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices - 1);\n\t\t\tlet remaining = allTotals.slice(maxSlices - 1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => { sumOfRemaining += d[0]; });\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices - 1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\t\tsuper.renderLegend(this.legendTotals);\n\t}\n\n\tmakeLegend(data, index, x_pos, y_pos) {\n\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(data) : data;\n\n\t\treturn legendDot(\n\t\t\tx_pos,\n\t\t\ty_pos,\n\t\t\t12, // size\n\t\t\t3, // dot radius\n\t\t\tthis.colors[index], // fill\n\t\t\tthis.state.labels[index], // label\n\t\t\tformatted, // value\n\t\t\tnull, // base_font_size\n\t\t\tthis.config.truncateLegends // truncate_legends\n\t\t);\n\t}\n}\n", "// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm > 9 ? '' : '0') + mm,\n\t\t(dd > 9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime() / NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif (roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short = false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth(month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif (day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n", "import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport {\n\ttranslateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr\n} from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof (this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif (animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\tconst numberOfPoints = data.xPositions.length;\n\t\t\treturn data.xPositions.map((x, i) => {\n\t\t\t\tlet y = 0;\n\n\t\t\t\tlet isLast = i == numberOfPoints - 1;\n\t\t\t\tlet isFirst = i == 0;\n\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i], this.constants.barHeight, isFirst, isLast, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif (newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{\n\t\t\t\t\t\tmode: this.constants.mode,\n\t\t\t\t\t\tpos: this.constants.pos,\n\t\t\t\t\t\tshortenNumbers: this.constants.shortenNumbers,\n\t\t\t\t\t\tnumberFormatter: this.constants.numberFormatter\n\t\t\t\t\t})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{ mode: this.constants.mode, pos: this.constants.pos })\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{ labelPos: m.options.labelPos, stroke: m.options.stroke, mode: 'span', lineType: m.options.lineType })\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, { labelPos: r.options.labelPos, stroke: r.options.stroke, fill: r.options.fill })\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function () { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet { index, colWidth, rowHeight, squareSize, radius, xTranslate } = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif (weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif (day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif (newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function () { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{ zeroLine: newData.zeroLine }\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function () { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif (!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t\t\t\tthis.units = [];\n\t\t\tif (c.showDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tc.hideDotBorder\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (c.trailingDot && !c.showDots) {\n\t\t\t\tconst lastIndex = data.yPositions.length - 1;\n\t\t\t\tconst dot = datasetDot(\n\t\t\t\t\tdata.xPositions[lastIndex],\n\t\t\t\t\tdata.yPositions[lastIndex],\n\t\t\t\t\tdata.radius,\n\t\t\t\t\tc.color,\n\t\t\t\t\t(c.valuesOverPoints ? data.values[lastIndex] : ''),\n\t\t\t\t\tlastIndex,\n\t\t\t\t\tc.hideDotBorder\n\t\t\t\t);\n\n\t\t\t\tthis.units.push(dot);\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif (Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif (this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n", "import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, getExtraHeight } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\n\t\tm.paddings.right = 30;\n\t\tm.paddings.top = 60;\n\t\tm.paddings.bottom = 0;\n\n\t\tm.legendHeight = 80;\n\t\tm.baseHeight = (b.height) * 8 + getExtraHeight(m);\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif (bars.includes(bar)) {\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet width = bar.getAttribute('width') || bar.getBoundingClientRect().width;\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(width) / 2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length > 0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i] / s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, { name: title, value: (fraction * 100).toFixed(1) + \"%\" });\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n", "import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.type = 'pie';\n\t\tthis.sliceName = 'pieSlices';\n\n\t\tthis.arcFunc = makeArcPathStr;\n\t\tthis.shapeFunc = makeCircleStr;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tgetRadius() {\n\t\treturn this.height > this.width ? this.center.x : this.center.y;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = this.getRadius();\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1 : 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart, curEnd;\n\t\t\tif (this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? this.shapeFunc(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: this.arcFunc(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property) {\n\t\tconst { radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle + (property.angle / 2), radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path, i, flag, e) {\n\t\tif (!path) return;\n\t\tconst color = this.colors[i];\n\t\tif (flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\t// path.style.fill = lightenDarkenColor(color, 50);\n\t\t\t// path.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, { name: title, value: percent + \"%\" });\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\tthis.resetHover(path, color)\n\t\t}\n\t}\n\n\tresetHover(path, color) {\n\t\ttransform(path, 'translate3d(0,0,0)');\n\t\tthis.tip.hideTip();\n\t\tpath.style.fill = color;\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e) {\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get(this.sliceName).store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevActive = this.curActiveSlice;\n\t\tif (slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevActive, prevIndex, false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave() {\n\t\tthis.hoverSlice(this.curActiveSlice, this.curActiveSliceIndex, false);\n\t}\n}\n", "import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif (x === 0) {\n\t\treturn [0, 0];\n\t}\n\tif (isNaN(x)) {\n\t\treturn { mantissa: -6755399441055744, exponent: 972 };\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif (!isFinite(x)) {\n\t\treturn { mantissa: sig * 4503599627370496, exponent: 972 };\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x / Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min = 0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif (range > 5) {\n\t\tif (range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range / 2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif (range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range / noOfParts;\n\t}\n\n\t// Special case: 0\n\tif (range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor (var i = 0; i <= noOfParts; i++) {\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue = 0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue / Math.pow(10, exponent) : 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum = false, range = {}) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\tif (range.max !== undefined) {\n\t\tmaxValue = maxValue > range.max ? maxValue : range.max;\n\t}\n\t\n\tif (range.min !== undefined) {\n\t\tminValue = minValue < range.min ? minValue : range.min;\n\t}\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor (var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif (maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif (!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if (maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif (maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if (maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif (!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif (yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if (yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor (var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length - 1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function (prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor (var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n", "import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport {\n\tDAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK\n} from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport {\n\tgetExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE\n} from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data = this.data) {\n\t\tif (data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif (!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear(data.start.getFullYear() - 1);\n\t\t}\n\t\tif (!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif (parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif ([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH / 2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif (!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif (daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1]) - 1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width / 2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, { name: name, value: value, valueFirst: 1 }, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH / 2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH / 4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor (var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif (!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate = '') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor (var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif (col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor (var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif (empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n", "import { fillArray } from '../utils/helpers';\nimport {\n\tDEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH,\n\tSERIES_LABEL_SPACE_RATIO\n} from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif (!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d => {\n\t\t// Set values\n\t\tif (!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif (vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif (!d.chartType) {\n\t\t\tif (!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif (data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif (d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif (realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif (realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels = [], isSeries = true) {\n\tlet allowedSpace = (chartWidth / labels.length) * SERIES_LABEL_SPACE_RATIO;\n\tif (allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif (isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength / allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif (label.length > allowedLetters) {\n\n\t\t\tif (!isSeries) {\n\t\t\t\tif (allowedLetters - 3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters - 3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (i % seriesMultiple !== 0) {\n\t\t\t\t\tif (i !== (labels.length - 1)) {\n\t\t\t\t\t\tlabel = \"\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (i > (labels.length - (seriesMultiple / 2))) {\n\t\t\t\t\t\tlabel = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n", "import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendDot } from '../utils/draw';\nimport {\n\tgetTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE\n} from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif (this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\t\tthis.config.numberFormatter = options.axisOptions.numberFormatter;\n\n\t\tthis.config.yAxisRange = options.axisOptions.yAxisRange || {},\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t\tthis.config.legendRowHeight = 30;\n\t}\n\n\tprepareData(data = this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data = this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif (!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width / (s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth / 2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum, this.config.yAxisRange);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif (this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif (pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif (this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif (!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif (this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif (!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif (this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif (this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif (this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers,\n\t\t\t\t\tnumberFormatter: this.config.numberFormatter,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth / (stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth / 2);\n\t\t\t\t\tif (!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif (this.config.valuesOverPoints) {\n\t\t\t\t\t\tif (stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\tshowDots: this.lineOptions.showDots,\n\t\t\t\t\ttrailingDot: this.lineOptions.trailingDot,\n\t\t\t\t\thideDotBorder: this.lineOptions.hideDotBorder,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif (args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif (relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY > getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif (!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{ name: dbi.formattedLabel, value: '' },\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif (s.datasets.length > 1) {\n\t\t\tsuper.renderLegend(s.datasets);\n\t\t}\n\t}\n\n\tmakeLegend(data, index, x_pos, y_pos) {\n\t\treturn legendDot(\n\t\t\tx_pos,\n\t\t\ty_pos + 5, // Extra offset\n\t\t\t12, // size\n\t\t\t3, // dot radius\n\t\t\tthis.colors[index], // fill\n\t\t\tdata.name, //label\n\t\t\tnull, // value\n\t\t\t8.75, // base_font_size\n\t\t\tthis.config.truncateLegends // truncate legends\n\t\t);\n\t}\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif (this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif (this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif (this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif (this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index = this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif (index < 0) index = 0;\n\t\tif (index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif (index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index = this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength - 1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index = 0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif (datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n", "import '../css/charts.scss';\n\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };", "import PieChart from './PieChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { transform } from '../utils/animation';\n\nexport default class DonutChart extends PieChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.type = 'donut';\n\t\tthis.sliceName = 'donutSlices';\n\n\t\tthis.arcFunc = makeArcStrokePathStr;\n\t\tthis.shapeFunc = makeStrokeCircleStr;\n\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tgetRadius() {\n\t\treturn this.height > this.width\n\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t: this.center.y - this.strokeWidth / 2;\n\t}\n\n\tresetHover(path, color) {\n\t\ttransform(path,'translate3d(0,0,0)');\n\t\tthis.tip.hideTip();\n\t\tpath.style.stroke = color;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\tthis.sliceName,\n\t\t\t\t{},\n\t\t\t\tfunction () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n}\n", "import { Chart } from \"frappe-charts/dist/frappe-charts.esm\";\n\nfrappe.provide(\"frappe.ui\");\nfrappe.Chart = Chart;\n\nfrappe.ui.RealtimeChart = class RealtimeChart extends frappe.Chart {\n\tconstructor(element, socketEvent, maxLabelPoints = 8, data) {\n\t\tsuper(element, data);\n\t\tif (data.data.datasets[0].values.length > maxLabelPoints) {\n\t\t\tfrappe.throw(\n\t\t\t\t__(\n\t\t\t\t\t\"Length of passed data array is greater than value of maximum allowed label points!\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tthis.currentSize = data.data.datasets[0].values.length;\n\t\tthis.socketEvent = socketEvent;\n\t\tthis.maxLabelPoints = maxLabelPoints;\n\n\t\tthis.start_updating = function () {\n\t\t\tfrappe.realtime.on(this.socketEvent, (data) => {\n\t\t\t\tthis.update_chart(data.label, data.points);\n\t\t\t});\n\t\t};\n\n\t\tthis.stop_updating = function () {\n\t\t\tfrappe.realtime.off(this.socketEvent);\n\t\t};\n\n\t\tthis.update_chart = function (label, data) {\n\t\t\tif (this.currentSize >= this.maxLabelPoints) {\n\t\t\t\tthis.removeDataPoint(0);\n\t\t\t} else {\n\t\t\t\tthis.currentSize++;\n\t\t\t}\n\t\t\tthis.addDataPoint(__(label), data);\n\t\t};\n\t}\n};\n", "frappe.provide(\"frappe.ui.keys\");\n\nlet shortcut_groups = new WeakMap();\nlet shortcut_group_list = [];\nfrappe.ui.keys.shortcut_groups = shortcut_groups;\n\nfrappe.ui.keys.get_shortcut_group = (parent) => {\n\t// parent must be an object\n\tif (!shortcut_groups.has(parent)) {\n\t\tshortcut_groups.set(parent, new frappe.ui.keys.AltShortcutGroup());\n\t}\n\treturn shortcut_groups.get(parent);\n};\n\nlet listener_added = false;\nlet $current_dropdown = null;\nlet $body = $(document.body);\n\nfrappe.ui.keys.bind_shortcut_group_event = () => {\n\tif (listener_added) return;\n\tlistener_added = true;\n\n\tfunction highlight_alt_shortcuts() {\n\t\tif ($current_dropdown) {\n\t\t\t$current_dropdown.addClass(\"alt-pressed\");\n\t\t\t$body.removeClass(\"alt-pressed\");\n\t\t} else {\n\t\t\t$body.addClass(\"alt-pressed\");\n\t\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t}\n\t}\n\n\tfunction unhighlight_alt_shortcuts() {\n\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t$body.removeClass(\"alt-pressed\");\n\t}\n\n\t$(document).on(\"keydown\", (e) => {\n\t\tlet key = (frappe.ui.keys.key_map[e.which] || \"\").toLowerCase();\n\n\t\tif (key === \"alt\") {\n\t\t\thighlight_alt_shortcuts();\n\t\t}\n\n\t\tif (e.shiftKey || e.ctrlKey || e.metaKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (key && e.altKey) {\n\t\t\tlet shortcut = get_shortcut_for_key(key);\n\t\t\tif (shortcut) {\n\t\t\t\te.preventDefault();\n\t\t\t\tshortcut.$target[0].click();\n\t\t\t}\n\t\t\thighlight_alt_shortcuts();\n\t\t}\n\t});\n\t$(document).on(\"keyup\", (e) => {\n\t\tif (e.key === \"Alt\") {\n\t\t\tunhighlight_alt_shortcuts();\n\t\t}\n\t});\n\t$(document).on(\"mousemove\", () => {\n\t\tunhighlight_alt_shortcuts();\n\t});\n};\n\nfunction get_shortcut_for_key(key) {\n\t// Get the shortcut for combination of alt+key\n\t// Priority 1: Open dropdown\n\t// Priority 2: Current Page\n\n\tlet shortcuts = shortcut_group_list\n\t\t.filter((shortcut_group) => key in shortcut_group.shortcuts_dict)\n\t\t.map((shortcut_group) => shortcut_group.shortcuts_dict[key])\n\t\t.filter((shortcut) => shortcut.$target.is(\":visible\"));\n\n\tlet shortcut = null;\n\n\tif ($current_dropdown && $current_dropdown.is(\".open\")) {\n\t\tshortcut = shortcuts.find((shortcut) =>\n\t\t\t$.contains($current_dropdown[0], shortcut.$target[0])\n\t\t);\n\t}\n\n\tif (shortcut) return shortcut;\n\n\tshortcut = shortcuts.find((shortcut) =>\n\t\t$.contains(window.cur_page.page.page.wrapper[0], shortcut.$target[0])\n\t);\n\n\treturn shortcut;\n}\n\nfrappe.ui.keys.AltShortcutGroup = class AltShortcutGroup {\n\tconstructor() {\n\t\tthis.shortcuts_dict = {};\n\t\t$current_dropdown = null;\n\t\tthis.bind_events();\n\t\tfrappe.ui.keys.bind_shortcut_group_event();\n\t\tshortcut_group_list.push(this);\n\t}\n\n\tbind_events() {\n\t\t$(document).on(\"show.bs.dropdown\", (e) => {\n\t\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t\tlet $target = $(e.target);\n\t\t\tif ($target.is(\".dropdown, .btn-group\")) {\n\t\t\t\t$current_dropdown = $target;\n\t\t\t}\n\t\t});\n\t\t$(document).on(\"hide.bs.dropdown\", () => {\n\t\t\t$current_dropdown && $current_dropdown.removeClass(\"alt-pressed\");\n\t\t\t$current_dropdown = null;\n\t\t});\n\t}\n\n\tadd($target, $text_el) {\n\t\tif (!$text_el) {\n\t\t\t$text_el = $target;\n\t\t}\n\t\tlet text_content = $text_el.text().trim();\n\t\tlet letters = text_content.split(\"\");\n\t\t// first unused letter\n\t\tlet shortcut_letter = letters.find((letter) => {\n\t\t\tletter = letter.toLowerCase();\n\t\t\tlet is_valid_char = letter >= \"a\" && letter <= \"z\";\n\t\t\treturn !this.is_taken(letter) && is_valid_char;\n\t\t});\n\t\tif (!shortcut_letter) {\n\t\t\t$text_el.attr(\"data-label\", encodeURIComponent(text_content));\n\t\t\treturn;\n\t\t}\n\t\tfor (let key in this.shortcuts_dict) {\n\t\t\tlet shortcut = this.shortcuts_dict[key];\n\t\t\tif (shortcut.text === text_content) {\n\t\t\t\tshortcut.$target = $target;\n\t\t\t\tshortcut.$text_el = $text_el;\n\t\t\t\tthis.underline_text(shortcut);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet shortcut = {\n\t\t\t$target,\n\t\t\t$text_el,\n\t\t\tletter: shortcut_letter,\n\t\t\ttext: text_content,\n\t\t};\n\t\tthis.shortcuts_dict[shortcut_letter.toLowerCase()] = shortcut;\n\t\tthis.underline_text(shortcut);\n\t}\n\n\tunderline_text(shortcut) {\n\t\tif (frappe.boot.lang === \"eo\") {\n\t\t\t// The language code \"eo\" is used to trigger the In-Context Translation feature.\n\t\t\t// In this case we don't want shortcuts to rip apart the ID of the translatable text.\n\t\t\treturn;\n\t\t}\n\t\tshortcut.$text_el.attr(\"data-label\", encodeURIComponent(shortcut.text));\n\t\tlet underline_el_found = false;\n\t\tlet text_html = shortcut.text\n\t\t\t.split(\"\")\n\t\t\t.map((letter) => {\n\t\t\t\tif (letter === shortcut.letter && !underline_el_found) {\n\t\t\t\t\tletter = `<span class=\"alt-underline\">${letter}</span>`;\n\t\t\t\t\tunderline_el_found = true;\n\t\t\t\t}\n\t\t\t\treturn letter;\n\t\t\t})\n\t\t\t.join(\"\");\n\t\ttext_html = `<span>${text_html}</span>`;\n\t\tlet original_text_html = shortcut.$text_el.html();\n\t\ttext_html = original_text_html.replace(shortcut.text.trim(), text_html.trim());\n\t\tshortcut.$text_el.html(text_html);\n\t}\n\n\tis_taken(letter) {\n\t\tlet is_in_global_shortcut = frappe.ui.keys.standard_shortcuts\n\t\t\t.filter((s) => !s.page)\n\t\t\t.some((s) => s.shortcut === `alt+${letter}`);\n\t\treturn letter in this.shortcuts_dict || is_in_global_shortcut;\n\t}\n};\n", "import \"./alt_keyboard_shortcuts\";\n\nfrappe.provide(\"frappe.ui.keys.handlers\");\n\nfrappe.ui.keys.setup = function () {\n\t$(window).on(\"keydown\", function (e) {\n\t\tvar key = frappe.ui.keys.get_key(e);\n\t\tif (frappe.ui.keys.handlers[key]) {\n\t\t\tvar out = null;\n\t\t\tfor (var i = 0, l = frappe.ui.keys.handlers[key].length; i < l; i++) {\n\t\t\t\tvar handler = frappe.ui.keys.handlers[key][i];\n\t\t\t\tvar _out = handler.apply(this, [e]);\n\t\t\t\tif (_out === false) {\n\t\t\t\t\tout = _out;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t});\n};\n\nlet standard_shortcuts = [];\nfrappe.ui.keys.standard_shortcuts = standard_shortcuts;\nfrappe.ui.keys.add_shortcut = ({\n\tshortcut,\n\taction,\n\tdescription,\n\tpage,\n\ttarget,\n\tcondition,\n\tignore_inputs = false,\n} = {}) => {\n\tif (target instanceof jQuery) {\n\t\tlet $target = target;\n\t\taction = () => {\n\t\t\t$target[0].click();\n\t\t};\n\t}\n\tif (!condition) {\n\t\tcondition = () => true;\n\t}\n\tlet handler = (e) => {\n\t\tlet $focused_element = $(document.activeElement);\n\t\tlet is_input_focused = $focused_element.is(\n\t\t\t\"input, select, textarea, [contenteditable=true]\"\n\t\t);\n\t\tif (is_input_focused && !ignore_inputs) return;\n\t\tif (!condition()) return;\n\n\t\tif (action && (!page || page.wrapper.is(\":visible\"))) {\n\t\t\tlet prevent_default = action(e);\n\t\t\t// prevent default if true is explicitly returned\n\t\t\t// or nothing returned (undefined)\n\t\t\tif (prevent_default || prevent_default === undefined) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\t};\n\t// monkey patch page to handler\n\thandler.page = page;\n\t// remove handler with the same page attached to it\n\tfrappe.ui.keys.off(shortcut, page);\n\t// attach new handler\n\tfrappe.ui.keys.on(shortcut, handler);\n\n\t// update standard shortcut list\n\tlet existing_shortcut_index = standard_shortcuts.findIndex((s) => s.shortcut === shortcut);\n\tlet new_shortcut = { shortcut, action, description, page, condition };\n\tif (existing_shortcut_index === -1) {\n\t\tstandard_shortcuts.push(new_shortcut);\n\t} else {\n\t\tstandard_shortcuts[existing_shortcut_index] = new_shortcut;\n\t}\n};\n\nfrappe.ui.keys.show_keyboard_shortcut_dialog = () => {\n\tif (frappe.ui.keys.is_dialog_shown) return;\n\n\tlet global_shortcuts = standard_shortcuts.filter((shortcut) => !shortcut.page);\n\tlet current_page_shortcuts = standard_shortcuts.filter(\n\t\t(shortcut) => shortcut.page && shortcut.page === window.cur_page.page.page\n\t);\n\n\tlet grid_shortcuts = standard_shortcuts.filter(\n\t\t(shortcut) => shortcut.page && shortcut.page === window.cur_page.page.frm\n\t);\n\n\tfunction generate_shortcuts_html(shortcuts, heading) {\n\t\tif (!shortcuts.length) {\n\t\t\treturn \"\";\n\t\t}\n\t\tlet html = shortcuts\n\t\t\t.filter((s) => (s.condition ? s.condition() : true))\n\t\t\t.filter((s) => !!s.description)\n\t\t\t.map((shortcut) => {\n\t\t\t\tlet shortcut_label = shortcut.shortcut\n\t\t\t\t\t.split(\"+\")\n\t\t\t\t\t.map(frappe.utils.to_title_case)\n\t\t\t\t\t.join(\"+\");\n\t\t\t\tif (frappe.utils.is_mac()) {\n\t\t\t\t\tshortcut_label = shortcut_label.replace(\"Ctrl\", \"\u2318\").replace(\"Alt\", \"\u2325\");\n\t\t\t\t}\n\n\t\t\t\tshortcut_label = shortcut_label.replace(\"Shift\", \"\u21E7\");\n\n\t\t\t\treturn `<tr>\n\t\t\t\t\t<td width=\"40%\"><kbd>${shortcut_label}</kbd></td>\n\t\t\t\t\t<td width=\"60%\">${shortcut.description || \"\"}</td>\n\t\t\t\t</tr>`;\n\t\t\t})\n\t\t\t.join(\"\");\n\t\tif (!html) return \"\";\n\n\t\thtml = `<h5 style=\"margin: 0;\">${heading}</h5>\n\t\t\t<table style=\"margin-top: 10px;\" class=\"table table-bordered\">\n\t\t\t\t${html}\n\t\t\t</table>`;\n\t\treturn html;\n\t}\n\n\tlet global_shortcuts_html = generate_shortcuts_html(global_shortcuts, __(\"Global Shortcuts\"));\n\tlet current_page_shortcuts_html = generate_shortcuts_html(\n\t\tcurrent_page_shortcuts,\n\t\t__(\"Page Shortcuts\")\n\t);\n\tlet grid_shortcuts_html = generate_shortcuts_html(grid_shortcuts, __(\"Grid Shortcuts\"));\n\n\tlet dialog = new frappe.ui.Dialog({\n\t\ttitle: __(\"Keyboard Shortcuts\"),\n\t\ton_hide() {\n\t\t\tfrappe.ui.keys.is_dialog_shown = false;\n\t\t},\n\t});\n\n\tdialog.$body.append(global_shortcuts_html);\n\tdialog.$body.append(current_page_shortcuts_html);\n\tdialog.$body.append(grid_shortcuts_html);\n\tdialog.$body.append(`\n\t\t<div class=\"text-muted\">\n\t\t\t${__(\"Press Alt Key to trigger additional shortcuts in Menu and Sidebar\")}\n\t\t</div>\n\t`);\n\n\tdialog.show();\n\tfrappe.ui.keys.is_dialog_shown = true;\n};\n\nfrappe.ui.keys.get_key = function (e) {\n\tvar keycode = e.keyCode || e.which;\n\tvar key = frappe.ui.keys.key_map[keycode] || String.fromCharCode(keycode);\n\n\tif (e.ctrlKey || e.metaKey) {\n\t\t// add ctrl+ the key\n\t\tkey = \"ctrl+\" + key;\n\t}\n\tif (e.shiftKey) {\n\t\t// add shift+ the key\n\t\tkey = \"shift+\" + key;\n\t}\n\tif (e.altKey) {\n\t\t// add alt+ the key\n\t\tkey = \"alt+\" + key;\n\t}\n\tif (e.altKey && e.ctrlKey) {\n\t\t// add alt+ctrl+ the key or single key e.g f1,f2,etc..\n\t\treturn key.toLowerCase();\n\t}\n\treturn key.toLowerCase();\n};\n\nfrappe.ui.keys.on = function (key, handler) {\n\tif (!frappe.ui.keys.handlers[key]) {\n\t\tfrappe.ui.keys.handlers[key] = [];\n\t}\n\tfrappe.ui.keys.handlers[key].push(handler);\n};\n\nfrappe.ui.keys.off = function (key, page) {\n\tlet handlers = frappe.ui.keys.handlers[key];\n\tif (!handlers || handlers.length === 0) return;\n\tfrappe.ui.keys.handlers[key] = handlers.filter((h) => {\n\t\tif (!page) return false;\n\t\treturn h.page !== page;\n\t});\n};\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"ctrl+s\",\n\taction: function (e) {\n\t\tfrappe.app.trigger_primary_action();\n\t\te.preventDefault();\n\t\treturn false;\n\t},\n\tdescription: __(\"Trigger Primary Action\"),\n\tignore_inputs: true,\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"ctrl+g\",\n\taction: function (e) {\n\t\t$(\"#navbar-search\").focus();\n\t\te.preventDefault();\n\t\treturn false;\n\t},\n\tdescription: __(\"Open Awesomebar\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"ctrl+h\",\n\taction: function (e) {\n\t\te.preventDefault();\n\t\t$(\".navbar-home img\").click();\n\t},\n\tdescription: __(\"Navigate Home\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"alt+s\",\n\taction: function (e) {\n\t\te.preventDefault();\n\t\t$(\".dropdown-navbar-user button\").eq(0).click();\n\t},\n\tdescription: __(\"Open Settings\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"shift+/\",\n\taction: function () {\n\t\tfrappe.ui.keys.show_keyboard_shortcut_dialog();\n\t},\n\tdescription: __(\"Show Keyboard Shortcuts\"),\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"alt+h\",\n\taction: function (e) {\n\t\te.preventDefault();\n\t\t$(\".dropdown-help button\").eq(0).click();\n\t},\n\tdescription: __(\"Open Help\"),\n});\n\nfrappe.ui.keys.on(\"escape\", function (e) {\n\thandle_escape_key();\n});\n\nfrappe.ui.keys.on(\"esc\", function (e) {\n\thandle_escape_key();\n});\n\nfrappe.ui.keys.on(\"enter\", function (e) {\n\tif (window.cur_dialog && cur_dialog.confirm_dialog) {\n\t\tcur_dialog.get_primary_btn().trigger(\"click\");\n\t}\n});\n\nfrappe.ui.keys.on(\"ctrl+down\", function (e) {\n\tconst grid_row = frappe.ui.form.get_open_grid_form();\n\tif (grid_row?.has_next()) {\n\t\tgrid_row.toggle_view(false, function () {\n\t\t\tgrid_row.open_next();\n\t\t});\n\t} else {\n\t\te.preventDefault();\n\t}\n});\n\nfrappe.ui.keys.on(\"ctrl+up\", function (e) {\n\tconst grid_row = frappe.ui.form.get_open_grid_form();\n\tif (grid_row?.has_prev()) {\n\t\tgrid_row.toggle_view(false, function () {\n\t\t\tgrid_row.open_prev();\n\t\t});\n\t} else {\n\t\te.preventDefault();\n\t}\n});\n\nfrappe.ui.keys.add_shortcut({\n\tshortcut: \"shift+ctrl+r\",\n\taction: function () {\n\t\tfrappe.ui.toolbar.clear_cache();\n\t},\n\tdescription: __(\"Clear Cache and Reload\"),\n});\n\nfrappe.ui.keys.key_map = {\n\t8: \"backspace\",\n\t9: \"tab\",\n\t13: \"enter\",\n\t16: \"shift\",\n\t17: \"ctrl\",\n\t91: \"meta\",\n\t18: \"alt\",\n\t27: \"escape\",\n\t37: \"left\",\n\t39: \"right\",\n\t38: \"up\",\n\t40: \"down\",\n\t32: \"space\",\n\t112: \"f1\",\n\t113: \"f2\",\n\t114: \"f3\",\n\t115: \"f4\",\n\t116: \"f5\",\n\t191: \"/\",\n\t188: \"<\",\n\t190: \">\",\n};\n\n\"abcdefghijklmnopqrstuvwxyz\".split(\"\").forEach((letter, i) => {\n\tfrappe.ui.keys.key_map[65 + i] = letter;\n});\n\n// keyCode map\nfrappe.ui.keyCode = {\n\tESCAPE: 27,\n\tLEFT: 37,\n\tRIGHT: 39,\n\tUP: 38,\n\tDOWN: 40,\n\tENTER: 13,\n\tTAB: 9,\n\tSPACE: 32,\n\tBACKSPACE: 8,\n};\n\nfunction handle_escape_key() {\n\tclose_grid_and_dialog();\n\tdocument.activeElement?.blur();\n}\n\nfunction close_grid_and_dialog() {\n\t// close open grid row\n\tvar open_row = $(\".grid-row-open\");\n\tif (open_row.length) {\n\t\tvar grid_row = open_row.data(\"grid_row\");\n\t\tgrid_row.toggle_view(false);\n\t\treturn false;\n\t}\n\n\t// close open dialog\n\tif (cur_dialog && !cur_dialog.no_cancel_flag && !cur_dialog.static) {\n\t\tcur_dialog.cancel();\n\t\treturn false;\n\t}\n}\n", "frappe.provide(\"frappe.utils\");\n/**\n * Simple EventEmitterMixin which uses jQuery's event system\n */\nconst EventEmitterMixin = {\n\tinit() {\n\t\tthis.jq = jQuery({});\n\t},\n\n\ttrigger(evt, data) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.trigger(evt, data);\n\t},\n\n\tonce(evt, handler) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.one(evt, (e, data) => handler(data));\n\t},\n\n\ton(evt, handler) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.bind(evt, (e, data) => handler(data));\n\t},\n\n\toff(evt, handler) {\n\t\t!this.jq && this.init();\n\t\tthis.jq.unbind(evt, (e, data) => handler(data));\n\t},\n};\n\nfrappe.utils.make_event_emitter = function (object) {\n\tObject.assign(object, EventEmitterMixin);\n\treturn object;\n};\n\nexport default EventEmitterMixin;\n"],
  "mappings": "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",
  "names": ["e", "i", "r", "a", "b", "i", "$", "expr", "con", "document", "querySelector", "getOffset", "element", "rect", "getBoundingClientRect", "top", "documentElement", "scrollTop", "body", "left", "scrollLeft", "isHidden", "el", "offsetParent", "isElementInViewport", "bottom", "window", "innerHeight", "clientHeight", "right", "innerWidth", "clientWidth", "css", "ref", "insertAt", "head", "getElementsByTagName", "style", "createElement", "type", "firstChild", "insertBefore", "appendChild", "styleSheet", "cssText", "createTextNode", "create", "tag", "o", "i", "val", "parentNode", "_typeof", "Object", "keys", "map", "prop", "setAttribute", "BASE_MEASURES", "margins", "paddings", "baseHeight", "titleHeight", "legendHeight", "titleFontSize", "getTopOffset", "m", "getLeftOffset", "getExtraHeight", "getExtraWidth", "DEFAULT_CHART_COLORS", "DEFAULT_COLORS", "bar", "line", "pie", "percentage", "heatmap", "donut", "ANGLE_RATIO", "Math", "PI", "SvgTip", "parent", "s", "n", "colors", "t", "titleName", "titleValue", "listValues", "titleValueFirst", "x", "y", "setup", "makeTooltip", "fill", "calcPosition", "container", "inside", "this", "className", "innerHTML", "hideTip", "title", "list", "dataPointList", "addEventListener", "_this", "index", "length", "classList", "add", "remove", "set", "color", "_this2", "value", "formatted", "li", "width", "offsetWidth", "offsetHeight", "maxLeft", "pointer", "delta", "pointerOffset", "name", "valueFirst", "refresh", "opacity", "floatTwo", "d", "parseFloat", "toFixed", "fillArray", "array", "count", "start", "fillerArray", "Array", "abs", "concat", "getStringWidth", "string", "charWidth", "getPositionByAngle", "angle", "radius", "sin", "cos", "isValidNumber", "candidate", "nonNegative", "Number", "isNaN", "isFinite", "round", "deepClone", "cloned", "key", "Date", "getTime", "isArray", "getBarHeightAndYAttr", "yTop", "zeroLine", "height", "equilizeNoOfElements", "array1", "array2", "extraCount", "truncateString", "txt", "len", "slice", "shortenLargeNumber", "label", "number", "p", "floor", "log10", "l", "shortened", "pow", "getSplineCurvePointsStr", "xList", "yList", "points", "min", "push", "controlPoint", "current", "previous", "next", "reverse", "pointA", "pointB", "lengthX", "lengthY", "sqrt", "atan2", "command", "reduce", "acc", "point", "a", "cps", "cpe", "createSVG", "createElementNS", "renderVerticalGradient", "svgDefElem", "gradientId", "id", "x1", "x2", "y1", "y2", "setGradientStop", "gradElem", "offset", "makeSVGGroup", "transform", "args", "makePath", "pathStr", "stroke", "strokeWidth", "styles", "makeArcPathStr", "startPosition", "endPosition", "center", "clockWise", "largeArc", "arcStartX", "arcStartY", "arcEndX", "arcEndY", "makeCircleStr", "midArc", "makeArcStrokePathStr", "makeStrokeCircleStr", "makeGradient", "lighter", "gradientDef", "opacities", "rightRoundedBar", "xOffset", "leftRoundedBar", "heatSquare", "size", "data", "rx", "legendDot", "font_size", "truncate", "textLabel", "dx", "dy", "textValue", "FONT_SIZE", "group", "makeText", "content", "options", "fontSize", "textAnchor", "makeVertLine", "text", "makeHoriLine", "lineType", "shortenNumbers", "numberFormatter", "datasetDot", "hideDotBorder", "dot", "cx", "cy", "r", "makeOverlay", "unit", "transformValue", "nodeName", "getAttribute", "childNodes", "overlay", "cloneNode", "parseInt", "updateOverlay", "attributes", "values", "filter", "attr", "includes", "specified", "nodeValue", "PRESET_COLOR_MAP", "translate", "oldCoord", "newCoord", "duration", "old", "join", "translateHoriLine", "yLine", "newY", "oldY", "animatePathStr", "oldPath", "EASING", "ease", "linear", "easein", "easeout", "easeinout", "animateSVGElement", "props", "dur", "easingType", "oldValues", "animElement", "newElement", "attributeName", "animateElement", "currentValue", "animAttr", "from", "to", "begin", "keySplines", "keyTimes", "calcMode", "webkitTransform", "msTransform", "mozTransform", "oTransform", "animateSVG", "svgContainer", "elements", "newElements", "animElements", "replaceChild", "animSvg", "runSMILAnimation", "svgElement", "elementsToAnimate", "animSvgElement", "removeChild", "setTimeout", "BaseChart", "HTMLElement", "Error", "rawChartArgs", "realData", "prepareData", "prepareFirstData", "validateColors", "config", "showTooltip", "showLegend", "isNavigable", "animate", "disableEntryAnimation", "truncateLegends", "measures", "JSON", "parse", "stringify", "setMeasures", "argHeight", "state", "initTimeout", "overlays", "configure", "validColors", "forEach", "test", "exec", "toString", "c", "ch", "console", "warn", "boundDrawFn", "draw", "ResizeObserver", "resizeObserver", "observe", "disconnect", "removeEventListener", "makeContainer", "updateWidth", "independentWidth", "tip", "bindTooltip", "onlyWidthChange", "init", "calc", "makeChartArea", "setupComponents", "components", "drawArea", "render", "update", "renderLegend", "setupNavigation", "padding", "baseWidth", "getComputedStyle", "paddingLeft", "paddingRight", "svg", "svgDefs", "titleEL", "legendArea", "updateTipOffset", "Map", "drawing", "error", "make", "_this3", "updateNav", "bindUnits", "dataset", "textContent", "divisor", "_this4", "legendRowHeight", "makeLegend", "bindOverlay", "keyActions", "onEnterKey", "bind", "onLeftArrow", "onUpArrow", "onRightArrow", "onDownArrow", "e", "_this5", "event", "keyCode", "chartSvg", "clone", "styleEl", "filename", "blob", "Blob", "url", "URL", "createObjectURL", "href", "download", "click", "revokeObjectURL", "AggregationChart", "formatTooltipY", "tooltipOptions", "maxSlices", "maxLegendPoints", "sliceTotals", "allTotals", "labels", "total", "datasets", "totals", "sort", "b", "remaining", "sumOfRemaining", "grandTotal", "legendTotals", "x_pos", "y_pos", "MONTH_NAMES", "DAY_NAMES_SHORT", "treatAsUtc", "date", "result", "setMinutes", "getMinutes", "getTimezoneOffset", "getYyyyMmDd", "dd", "getDate", "mm", "getMonth", "getFullYear", "getWeeksBetween", "startDate", "endDate", "weekStartDate", "setDayToSunday", "ceil", "SEC_IN_DAY", "areInSameMonth", "getMonthName", "short", "monthName", "getLastDateInMonth", "month", "year", "newDate", "day", "getDay", "addDays", "numberOfDays", "setDate", "ChartComponent", "layerClass", "layerTransform", "constants", "getData", "makeElements", "animateElements", "store", "layer", "oldData", "componentConfigs", "donutSlices", "sliceStrings", "transition", "newData", "pieSlices", "percentageBars", "numberOfPoints", "xPositions", "isLast", "isFirst", "widths", "barHeight", "yAxis", "positions", "position", "pos", "mode", "newPos", "newLabels", "oldPos", "oldLabels", "xAxis", "calcLabels", "xLine", "newX", "oldX", "yMarkers", "labelPos", "labelSvg", "newOptions", "yRegions", "region", "startPos", "endPos", "_this6", "newStarts", "oldStarts", "rectGroup", "newY1", "newY2", "oldY2", "newHeight", "heatDomain", "colWidth", "rowHeight", "squareSize", "xTranslate", "serializedSubDomains", "cols", "week", "weekNo", "_this7", "toUpperCase", "yyyyMmDd", "dataValue", "square", "barGraph", "unitType", "units", "yPositions", "j", "meta", "minHeight", "barWidth", "offsets", "barsWidth", "newXPos", "newYPos", "newOffsets", "oldXPos", "oldYPos", "oldOffsets", "rectAnim", "oldCoordStr", "split", "groupAnim", "lineGraph", "paths", "hideLine", "pointsList", "pointsStr", "spline", "path", "heatline", "gradient_id", "regionFill", "gradient_id_region", "showDots", "valuesOverPoints", "trailingDot", "lastIndex", "newValues", "newXList", "newYList", "pathComponents", "animPath", "regStartPt", "regEndPt", "animRegion", "getComponent", "k", "assign", "PercentageChart", "barOptions", "component", "xPos", "bars", "get", "target", "indexOf", "gOff", "pOff", "formattedLabels", "fraction", "setValues", "showTip", "PieChart", "mouseMove", "mouseLeave", "hoverRadio", "startAngle", "sliceName", "arcFunc", "shapeFunc", "getRadius", "prevSlicesProperties", "slicesProperties", "curAngle", "curStart", "curEnd", "originDiffAngle", "diffAngle", "endAngle", "prevProperty", "curPath", "property", "flag", "calTranslateByAngle", "g_off", "pageX", "pageY", "formatted_labels", "percent", "resetHover", "slices", "prevIndex", "curActiveSliceIndex", "prevActive", "curActiveSlice", "hoverSlice", "normalize", "mantissa", "exponent", "sig", "exp", "getChartRangeIntervals", "max", "upperBound", "lowerBound", "range", "noOfParts", "partSize", "intervals", "getChartIntervals", "maxValue", "minValue", "normalMaxValue", "normalMinValue", "calcChartIntervals", "withMinimum", "getPositiveFirstIntervals", "absMinValue", "intervalSize", "unshift", "posIntervals", "pseudoMaxValue", "pseudoMinValue", "getZeroIndex", "yPts", "zeroIndex", "interval", "getIntervalSize", "orderedArray", "getValueRange", "scale", "scaleMultiplier", "Heatmap", "countLabel", "validStarts", "startSubDomain", "startSubDomainIndex", "discreteDomains", "ROW_HEIGHT", "spacing", "HEATMAP_SQUARE_SIZE", "end", "noOfWeeks", "setFullYear", "dataPoints", "timestampSec", "firstWeekStart", "distribution", "distributionSize", "dataMaxValue", "distributionStep", "checkpoint", "domainConfigs", "getDomains", "lessCol", "dayName", "dayText", "comp", "daySquares", "daySquare", "dateParts", "lessText", "COL_WIDTH", "moreText", "HEATMAP_DISTRIBUTION_SIZE", "startMonth", "startYear", "noOfMonths", "startOfMonth", "h", "getDomainConfig", "startOfWeek", "domainConfig", "col", "noOfMonthWeeks", "getCol", "NO_OF_DAYS_IN_WEEK", "empty", "currentDate", "currentDateWithinData", "getSubDomainConfig", "dataPrep", "datasetLength", "zeroArray", "vals", "chartType", "zeroDataPrep", "zeroData", "AxisChart", "lineOptions", "axisOptions", "xAxisMode", "yAxisMode", "xIsSeries", "shortenYAxisNumbers", "yAxisRange", "formatTooltipX", "calcXPositions", "calcYAxisParameters", "getAllYValues", "makeDataByIndex", "unitWidth", "dataValues", "intervalHeight", "calcDatasetPoints", "calcYExtremes", "calcYRegions", "scaleAll", "cumulativeYs", "replace", "char", "cumulativeYPos", "stacked", "yExtremes", "cumulative", "allValueLists", "chartWidth", "isSeries", "allowedSpace", "seriesMultiple", "allowedLetters", "maxLabelLength", "barDatasets", "lineDatasets", "barsConfigs", "spaceRatio", "lineConfigs", "minLine", "dotSize", "markerConfigs", "optionals", "dataUnitComponents", "dataByIndex", "formatX", "formatY", "yPos", "formattedLabel", "yExtreme", "relX", "relY", "mapTooltipXPosition", "goal", "arr", "closest", "prev", "curr", "dbi", "overlayGuides", "g", "currentIndex", "currentUnit", "_this8", "setCurrentDataPoint", "_this9", "data_point", "properties", "evt", "createEvent", "initEvent", "dispatchEvent", "getDataPoint", "datasetValues", "splice", "chartTypes", "Chart", "data", "e", "shortcut", "s", "e", "i", "l", "s", "h", "e"]
}
