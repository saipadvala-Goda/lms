{"version":3,"file":"Discussions-DweGYuh1.js","sources":["../../../../frontend/src/components/DiscussionReplies.vue","../../../../frontend/src/components/Modals/DiscussionModal.vue","../../../../frontend/src/utils/scrollContainer.js","../../../../frontend/src/components/Discussions.vue"],"sourcesContent":["<template>\n\t<div class=\"mt-6\">\n\t\t<div v-if=\"!singleThread\" class=\"flex items-center mb-5\">\n\t\t\t<Button variant=\"outline\" @click=\"showTopics = true\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<ChevronLeft class=\"w-5 h-5 stroke-1.5 text-gray-700\" />\n\t\t\t\t</template>\n\t\t\t</Button>\n\t\t\t<span class=\"text-lg font-semibold ml-2\">\n\t\t\t\t{{ topic.title }}\n\t\t\t</span>\n\t\t</div>\n\n\t\t<div v-for=\"(reply, index) in replies.data\">\n\t\t\t<div\n\t\t\t\tclass=\"py-3\"\n\t\t\t\t:class=\"{ 'border-b': index + 1 != replies.data.length }\"\n\t\t\t>\n\t\t\t\t<div class=\"flex items-center justify-between mb-2\">\n\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t<UserAvatar :user=\"reply.user\" class=\"mr-2\" />\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{{ reply.user.full_name }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"text-sm ml-2\">\n\t\t\t\t\t\t\t{{ timeAgo(reply.creation) }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tv-if=\"user.data.name == reply.owner && !reply.editable\"\n\t\t\t\t\t\t:options=\"[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Edit',\n\t\t\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\t\t\treply.editable = true\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Delete',\n\t\t\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\t\t\tdeleteReply(reply)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template v-slot=\"{ open }\">\n\t\t\t\t\t\t\t<MoreHorizontal class=\"w-4 h-4 stroke-1.5 cursor-pointer\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<div v-if=\"reply.editable\">\n\t\t\t\t\t\t<Button variant=\"ghost\" @click=\"postEdited(reply)\">\n\t\t\t\t\t\t\t{{ __('Post') }}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"ghost\" @click=\"reply.editable = false\">\n\t\t\t\t\t\t\t{{ __('Discard') }}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<TextEditor\n\t\t\t\t\t:content=\"reply.reply\"\n\t\t\t\t\t@change=\"(val) => (reply.reply = val)\"\n\t\t\t\t\t:editable=\"reply.editable || false\"\n\t\t\t\t\t:fixedMenu=\"reply.editable || false\"\n\t\t\t\t\t:editorClass=\"\n\t\t\t\t\t\treply.editable\n\t\t\t\t\t\t\t? 'ProseMirror prose prose-table:table-fixed prose-td:p-2 prose-th:p-2 prose-td:border prose-th:border prose-td:border-gray-300 prose-th:border-gray-300 prose-td:relative prose-th:relative prose-th:bg-gray-100 prose-sm max-w-none'\n\t\t\t\t\t\t\t: 'prose-sm'\n\t\t\t\t\t\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<TextEditor\n\t\t\tclass=\"mt-5\"\n\t\t\t:content=\"newReply\"\n\t\t\t:mentions=\"mentionUsers\"\n\t\t\t@change=\"(val) => (newReply = val)\"\n\t\t\tplaceholder=\"Type your reply here...\"\n\t\t\t:fixedMenu=\"true\"\n\t\t\teditorClass=\"ProseMirror prose prose-table:table-fixed prose-td:p-2 prose-th:p-2 prose-td:border prose-th:border prose-td:border-gray-300 prose-th:border-gray-300 prose-td:relative prose-th:relative prose-th:bg-gray-100 prose-sm max-w-none border border-gray-300 rounded-b-md min-h-[7rem] py-1 px-2\"\n\t\t/>\n\t\t<div class=\"flex justify-between mt-2\">\n\t\t\t<span> </span>\n\t\t\t<Button @click=\"postReply()\">\n\t\t\t\t<span>\n\t\t\t\t\t{{ __('Post') }}\n\t\t\t\t</span>\n\t\t\t</Button>\n\t\t</div>\n\t</div>\n</template>\n<script setup>\nimport { createResource, TextEditor, Button, Dropdown } from 'frappe-ui'\nimport { timeAgo } from '../utils'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport { ChevronLeft, MoreHorizontal } from 'lucide-vue-next'\nimport { ref, inject, onMounted, computed } from 'vue'\nimport { createToast } from '../utils'\n\nconst showTopics = defineModel('showTopics')\nconst newReply = ref('')\nconst socket = inject('$socket')\nconst user = inject('$user')\nconst allUsers = inject('$allUsers')\n\nconst props = defineProps({\n\ttopic: {\n\t\ttype: Object,\n\t\trequired: true,\n\t},\n\tsingleThread: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n})\n\nonMounted(() => {\n\tsocket.on('publish_message', (data) => {\n\t\treplies.reload()\n\t})\n\tsocket.on('update_message', (data) => {\n\t\treplies.reload()\n\t})\n\tsocket.on('delete_message', (data) => {\n\t\treplies.reload()\n\t})\n})\n\nconst replies = createResource({\n\turl: 'lms.lms.utils.get_discussion_replies',\n\tcache: ['replies', props.topic],\n\tmakeParams(values) {\n\t\treturn {\n\t\t\ttopic: props.topic.name,\n\t\t}\n\t},\n\tauto: true,\n})\n\nconst newReplyResource = createResource({\n\turl: 'frappe.client.insert',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoc: {\n\t\t\t\tdoctype: 'Discussion Reply',\n\t\t\t\treply: newReply.value,\n\t\t\t\ttopic: props.topic.name,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst mentionUsers = computed(() => {\n\tlet users = Object.values(allUsers.data).map((user) => {\n\t\treturn {\n\t\t\tvalue: user.name,\n\t\t\tlabel: user.full_name,\n\t\t}\n\t})\n\treturn users\n})\n\nconst postReply = () => {\n\tnewReplyResource.submit(\n\t\t{},\n\t\t{\n\t\t\tvalidate() {\n\t\t\t\tif (!newReply.value) {\n\t\t\t\t\treturn 'Reply cannot be empty'\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tnewReply.value = ''\n\t\t\t\treplies.reload()\n\t\t\t},\n\t\t\tonError(err) {\n\t\t\t\tcreateToast({\n\t\t\t\t\ttitle: 'Error',\n\t\t\t\t\ttext: err.messages?.[0] || err,\n\t\t\t\t\ticon: 'x',\n\t\t\t\t\ticonClasses: 'bg-red-600 text-white rounded-md p-px',\n\t\t\t\t\tposition: 'top-center',\n\t\t\t\t\ttimeout: 10,\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t)\n}\n\nconst editReplyResource = createResource({\n\turl: 'frappe.client.set_value',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'Discussion Reply',\n\t\t\tname: values.name,\n\t\t\tfieldname: 'reply',\n\t\t\tvalue: values.reply,\n\t\t}\n\t},\n})\n\nconst postEdited = (reply) => {\n\teditReplyResource.submit(\n\t\t{\n\t\t\tname: reply.name,\n\t\t\treply: reply.reply,\n\t\t},\n\t\t{\n\t\t\tvalidate() {\n\t\t\t\tif (!reply.reply) {\n\t\t\t\t\treturn 'Reply cannot be empty'\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\treply.editable = false\n\t\t\t\treplies.reload()\n\t\t\t},\n\t\t}\n\t)\n}\n\nconst deleteReplyResource = createResource({\n\turl: 'frappe.client.delete',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoctype: 'Discussion Reply',\n\t\t\tname: values.name,\n\t\t}\n\t},\n})\n\nconst deleteReply = (reply) => {\n\tdeleteReplyResource.submit(\n\t\t{\n\t\t\tname: reply.name,\n\t\t},\n\t\t{\n\t\t\tonSuccess() {\n\t\t\t\treplies.reload()\n\t\t\t},\n\t\t}\n\t)\n}\n</script>\n","<template>\n\t<Dialog\n\t\t:options=\"{\n\t\t\ttitle: singularize(props.title),\n\t\t\tsize: '2xl',\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Post',\n\t\t\t\t\tvariant: 'solid',\n\t\t\t\t\tonClick: (close) => submitTopic(close),\n\t\t\t\t},\n\t\t\t],\n\t\t}\"\n\t>\n\t\t<template #body-content>\n\t\t\t<div class=\"flex flex-col gap-4\">\n\t\t\t\t<div>\n\t\t\t\t\t<FormControl v-model=\"topic.title\" :label=\"__('Title')\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"mb-1.5 text-sm text-gray-600\">\n\t\t\t\t\t\t{{ __('Details') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<TextEditor\n\t\t\t\t\t\t:content=\"topic.reply\"\n\t\t\t\t\t\t@change=\"(val) => (topic.reply = val)\"\n\t\t\t\t\t\t:editable=\"true\"\n\t\t\t\t\t\t:fixedMenu=\"true\"\n\t\t\t\t\t\teditorClass=\"prose-sm max-w-none border-b border-x bg-gray-100 rounded-b-md py-1 px-2 min-h-[7rem]\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</Dialog>\n</template>\n<script setup>\nimport { Dialog, FormControl, TextEditor, createResource } from 'frappe-ui'\nimport { reactive, defineModel } from 'vue'\nimport { showToast, singularize } from '@/utils'\n\nconst topics = defineModel('reloadTopics')\n\nconst props = defineProps({\n\ttitle: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tdoctype: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tdocname: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n})\n\nconst topic = reactive({\n\ttitle: '',\n\treply: '',\n})\n\nconst topicResource = createResource({\n\turl: 'frappe.client.insert',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoc: {\n\t\t\t\tdoctype: 'Discussion Topic',\n\t\t\t\treference_doctype: props.doctype,\n\t\t\t\treference_docname: props.docname,\n\t\t\t\ttitle: topic.title,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst replyResource = createResource({\n\turl: 'frappe.client.insert',\n\tmakeParams(values) {\n\t\treturn {\n\t\t\tdoc: {\n\t\t\t\tdoctype: 'Discussion Reply',\n\t\t\t\ttopic: values.topic,\n\t\t\t\treply: topic.reply,\n\t\t\t},\n\t\t}\n\t},\n})\n\nconst submitTopic = (close) => {\n\ttopicResource.submit(\n\t\t{},\n\t\t{\n\t\t\tvalidate() {\n\t\t\t\tif (!topic.title) {\n\t\t\t\t\treturn 'Title cannot be empty.'\n\t\t\t\t}\n\t\t\t\tif (!topic.reply) {\n\t\t\t\t\treturn 'Reply cannot be empty.'\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSuccess(data) {\n\t\t\t\treplyResource.submit(\n\t\t\t\t\t{\n\t\t\t\t\t\ttopic: data.name,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonSuccess() {\n\t\t\t\t\t\t\ttopic.title = ''\n\t\t\t\t\t\t\ttopic.reply = ''\n\t\t\t\t\t\t\ttopics.value.reload()\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t},\n\t\t\tonError(err) {\n\t\t\t\tshowToast('Error', err.message, 'x')\n\t\t\t},\n\t\t}\n\t)\n}\n</script>\n","export function scrollTo(...options) {\n\tif (!options || options.length === 0) return\n\tconst container = getScrollContainer()\n\tif (!container) return\n\tcontainer.scrollTo(...options)\n}\n\nexport function getScrollContainer() {\n\t// window.scrollContainer is reference to the scroll container in DesktopLayout.vue and MobileLayout.vue\n\treturn window.scrollContainer\n}\n","<template>\n\t<div>\n\t\t<Button v-if=\"!singleThread\" class=\"float-right\" @click=\"openTopicModal()\">\n\t\t\t{{ __('New {0}').format(singularize(title)) }}\n\t\t</Button>\n\t\t<div class=\"text-xl font-semibold\">\n\t\t\t{{ __(title) }}\n\t\t</div>\n\t</div>\n\t<div v-if=\"topics.data?.length && !singleThread\">\n\t\t<div v-if=\"showTopics\" v-for=\"(topic, index) in topics.data\">\n\t\t\t<div\n\t\t\t\t@click=\"showReplies(topic)\"\n\t\t\t\tclass=\"flex items-center cursor-pointer py-5 w-full\"\n\t\t\t\t:class=\"{ 'border-b': index + 1 != topics.data.length }\"\n\t\t\t>\n\t\t\t\t<UserAvatar :user=\"topic.user\" size=\"2xl\" class=\"mr-4\" />\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"text-lg font-semibold mb-1\">\n\t\t\t\t\t\t{{ topic.title }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex items-center\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{{ topic.user.full_name }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"text-sm ml-3\">\n\t\t\t\t\t\t\t{{ timeAgo(topic.creation) }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else>\n\t\t\t<DiscussionReplies\n\t\t\t\t:topic=\"currentTopic\"\n\t\t\t\tv-model:showTopics=\"showTopics\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n\t<div v-else-if=\"singleThread && topics.data\">\n\t\t<DiscussionReplies :topic=\"topics.data\" :singleThread=\"singleThread\" />\n\t</div>\n\t<div\n\t\tv-else\n\t\tclass=\"flex flex-col items-center justify-center border-2 border-dashed mt-5 py-8 rounded-md\"\n\t>\n\t\t<MessageSquareText class=\"w-7 h-7 text-gray-500 stroke-1.5 mr-2\" />\n\t\t<div class=\"\">\n\t\t\t<div v-if=\"emptyStateTitle\" class=\"font-medium mb-2\">\n\t\t\t\t{{ __(emptyStateTitle) }}\n\t\t\t</div>\n\t\t\t<div class=\"text-gray-600\">\n\t\t\t\t{{ __(emptyStateText) }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<DiscussionModal\n\t\tv-model=\"showTopicModal\"\n\t\t:title=\"__('New {0}').format(title)\"\n\t\t:doctype=\"props.doctype\"\n\t\t:docname=\"props.docname\"\n\t\tv-model:reloadTopics=\"topics\"\n\t/>\n</template>\n<script setup>\nimport { createResource, Button } from 'frappe-ui'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport { singularize, timeAgo } from '../utils'\nimport { ref, onMounted, inject } from 'vue'\nimport DiscussionReplies from '@/components/DiscussionReplies.vue'\nimport DiscussionModal from '@/components/Modals/DiscussionModal.vue'\nimport { MessageSquareText } from 'lucide-vue-next'\nimport { getScrollContainer } from '@/utils/scrollContainer'\n\nconst showTopics = ref(true)\nconst currentTopic = ref(null)\nconst socket = inject('$socket')\nconst user = inject('$user')\nconst showTopicModal = ref(false)\n\nconst props = defineProps({\n\ttitle: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tdoctype: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tdocname: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\temptyStateTitle: {\n\t\ttype: String,\n\t\tdefault: '',\n\t},\n\temptyStateText: {\n\t\ttype: String,\n\t\tdefault: 'Start a discussion',\n\t},\n\tsingleThread: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n\tscrollToBottom: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n})\n\nonMounted(() => {\n\tif (user.data) topics.reload()\n\n\tsocket.on('new_discussion_topic', (data) => {\n\t\ttopics.refresh()\n\t})\n\n\tif (props.scrollToBottom) {\n\t\tsetTimeout(() => {\n\t\t\tscrollToEnd()\n\t\t}, 100)\n\t}\n})\n\nconst scrollToEnd = () => {\n\tlet scrollContainer = getScrollContainer()\n\tscrollContainer.scrollTop = scrollContainer.scrollHeight\n}\n\nconst topics = createResource({\n\turl: 'lms.lms.utils.get_discussion_topics',\n\tcache: ['topics', props.doctype, props.docname],\n\tmakeParams() {\n\t\treturn {\n\t\t\tdoctype: props.doctype,\n\t\t\tdocname: props.docname,\n\t\t\tsingle_thread: props.singleThread,\n\t\t}\n\t},\n})\n\nconst showReplies = (topic) => {\n\tshowTopics.value = false\n\tcurrentTopic.value = topic\n}\n\nconst openTopicModal = () => {\n\tshowTopicModal.value = true\n}\n</script>\n"],"names":["showTopics","_useModel","__props","newReply","ref","socket","inject","user","allUsers","props","onMounted","data","replies","createResource","values","newReplyResource","mentionUsers","computed","postReply","err","createToast","_a","editReplyResource","postEdited","reply","deleteReplyResource","deleteReply","topics","topic","reactive","topicResource","replyResource","submitTopic","close","showToast","getScrollContainer","currentTopic","showTopicModal","scrollToEnd","scrollContainer","showReplies","openTopicModal"],"mappings":"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"}